#!/usr/bin/env babel-node

import path from 'path'
import fs from 'fs'
import Demobox from '../lib'

let yargs = require('yargs')

yargs = yargs
  .usage('Usage: demobox <command> [...options]')
  .command('gen', 'generate the docs', yargs => {
    yargs = yargs
      .usage('demobox gen [...options]')
      .options({
        c: {
          alias: 'config',
          describe: 'location of the config file to use',
          default: '.demobox.js',
          type: 'string',
        }, 
      })
      .help('help')
      .alias('help', 'h')
    argv = yargs.argv
  })

  .command('serve', 'start an ide for documentation creation', yargs => {
    yargs = yargs
      .usage('demobox serve [...options]')
      .options({
        c: {
          alias: 'config',
          describe: 'location of the config file to use',
          default: '.demobox.js',
          type: 'string',
        }, 
        p: {
          alias: 'port',
          describe: 'Port to listen on',
          default: '8405',
          type: 'number',
        },
      })
      .help('help')
      .alias('help', 'h')
    argv = yargs.argv
    if (!fs.existsSync(path.resolve(argv.config))) {
      yargs.showHelp()
      process.exit()
    }
  })
  .demand(1)
  .help('help')
  .alias('help', 'h')

let argv = yargs.argv

const cmd = argv._[0]

const commands = {
  gen(db, options) {
  console.log('generating')
    db.generate(err => {
      console.log('Done generating')
      if (err) console.log(err)
    })
  },
  server(db, options) {
    db.serve(options.port)
  }
}

if (!commands[cmd]) {
  console.error(`Unknown command ${cmd}`)
  process.exit(1)
}

console.log(`Executing ${cmd}`)
console.log(JSON.stringify(argv))

let config

try {
  config = require(path.resolve(argv.config))
} catch (e) {
  console.log()
  console.log()
  console.log('!!! CONFIG FAIL: unable to load config.')
  console.log()
  console.log()
  throw e
}

config.configFile = argv.config

if (!config.baseDir) {
  config.baseDir = path.dirname(path.resolve(argv.config))
}

const db = new Demobox(config)
commands[cmd](db, argv)

